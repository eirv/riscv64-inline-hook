/**
 * This file is part of riscv64-inline-hook.
 *
 * riscv64-inline-hook is free software: you can redistribute it
 * and/or modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation, either
 * version 3 of the License, or (at your option) any later version.
 *
 * riscv64-inline-hook is distributed in the hope that it will be
 * useful, but WITHOUT ANY WARRANTY; without even the implied
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with riscv64-inline-hook.
 * If not, see <https://www.gnu.org/licenses/>.
 */

#pragma once

#include "rv64hook.h"

namespace rv64hook {

static constexpr uint16_t kTrampoline[] = {
    0x0e17, 0x0000, 0x3e03, 0x2bce, 0x0863, 0x000e, 0x8e02, 0x0e17, 0x0000, 0x3e03, 0x2b6e, 0x8e02,
    0x3023, 0xe021, 0x0113, 0xdf01, 0xe406, 0xec0e, 0xf012, 0xf416, 0xf81a, 0xfc1e, 0xe0a2, 0xe4a2,
    0xe8a6, 0xecaa, 0xf0ae, 0xf4b2, 0xf8b6, 0xfcba, 0xe13e, 0xe542, 0xe946, 0xed4a, 0xf14e, 0xf552,
    0xf956, 0xfd5a, 0xe1de, 0xe5e2, 0xe9e6, 0xedea, 0xf1ee, 0xf9f6, 0xfdfa, 0xe27e, 0xa602, 0xaa06,
    0xae0a, 0xb20e, 0xb612, 0xba16, 0xbe1a, 0xa29e, 0xa6a2, 0xaaa6, 0xaeaa, 0xb2ae, 0xb6b2, 0xbab6,
    0xbeba, 0xa33e, 0xa742, 0xab46, 0xaf4a, 0xb34e, 0xb752, 0xbb56, 0xbf5a, 0xa3de, 0xa7e2, 0xabe6,
    0xafea, 0xb3ee, 0xb7f2, 0xbbf6, 0xbffa, 0x3027, 0x21f1, 0x3423, 0x2001, 0x0597, 0x0000, 0xb583,
    0x2125, 0xbe03, 0x0185, 0xe072, 0xce03, 0x0485, 0x0963, 0x000e, 0xbe03, 0x0285, 0x0563, 0x000e,
    0x0028, 0x7d90, 0x9e02, 0x6582, 0xf1ed, 0xf057, 0xcd80, 0x3e57, 0x5e00, 0x0e13, 0x2081, 0x0e07,
    0x020e, 0x3f87, 0x2001, 0x3f7e, 0x3ede, 0x3e3e, 0x3d9e, 0x2d7e, 0x2cde, 0x2c3e, 0x2b9e, 0x3b7a,
    0x3ada, 0x3a3a, 0x399a, 0x297a, 0x28da, 0x283a, 0x279a, 0x3776, 0x36d6, 0x3636, 0x3596, 0x2576,
    0x24d6, 0x2436, 0x2396, 0x3372, 0x32d2, 0x3232, 0x3192, 0x2172, 0x20d2, 0x2032, 0x6f92, 0x7f6e,
    0x7ece, 0x7d8e, 0x6d6e, 0x6cce, 0x6c2e, 0x6b8e, 0x7b6a, 0x7aca, 0x7a2a, 0x798a, 0x696a, 0x68ca,
    0x682a, 0x678a, 0x7766, 0x76c6, 0x7626, 0x7586, 0x6566, 0x64c6, 0x6426, 0x6406, 0x73e2, 0x7342,
    0x72a2, 0x7202, 0x61e2, 0x60a2, 0x6142, 0x2e57, 0x43c0, 0x1a63, 0x140e, 0x0e17, 0x0000, 0x5e03,
    0x16ae, 0x02e3, 0xea0e, 0xce57, 0x5e00, 0x0e17, 0x0000, 0x3e03, 0x152e, 0x9e02, 0x20d7, 0x43c0,
    0x3023, 0xe021, 0x0113, 0xdf01, 0xe406, 0xec0e, 0xf012, 0xf416, 0xf81a, 0xfc1e, 0xe0a2, 0xe4a2,
    0xe8a6, 0xecaa, 0xf0ae, 0xf4b2, 0xf8b6, 0xfcba, 0xe13e, 0xe542, 0xe946, 0xed4a, 0xf14e, 0xf552,
    0xf956, 0xfd5a, 0xe1de, 0xe5e2, 0xe9e6, 0xedea, 0xf1ee, 0xf5f2, 0xf9f6, 0xfdfa, 0xe27e, 0xa602,
    0xaa06, 0xae0a, 0xb20e, 0xb612, 0xba16, 0xbe1a, 0xa29e, 0xa6a2, 0xaaa6, 0xaeaa, 0xb2ae, 0xb6b2,
    0xbab6, 0xbeba, 0xa33e, 0xa742, 0xab46, 0xaf4a, 0xb34e, 0xb752, 0xbb56, 0xbf5a, 0xa3de, 0xa7e2,
    0xabe6, 0xafea, 0xb3ee, 0xb7f2, 0xbbf6, 0xbffa, 0x3027, 0x21f1, 0x0597, 0x0000, 0xb583, 0x0ac5,
    0xbe03, 0x0185, 0xe072, 0xce03, 0x0485, 0x0963, 0x000e, 0xbe03, 0x0305, 0x0563, 0x000e, 0x0028,
    0x7d90, 0x9e02, 0x6582, 0xf1ed, 0x3f87, 0x2001, 0x3f7e, 0x3ede, 0x3e3e, 0x3d9e, 0x2d7e, 0x2cde,
    0x2c3e, 0x2b9e, 0x3b7a, 0x3ada, 0x3a3a, 0x399a, 0x297a, 0x28da, 0x283a, 0x279a, 0x3776, 0x36d6,
    0x3636, 0x3596, 0x2576, 0x24d6, 0x2436, 0x2396, 0x3372, 0x32d2, 0x3232, 0x3192, 0x2172, 0x20d2,
    0x2032, 0x6f92, 0x7f6e, 0x7ece, 0x7e2e, 0x7d8e, 0x6d6e, 0x6cce, 0x6c2e, 0x6b8e, 0x7b6a, 0x7aca,
    0x7a2a, 0x798a, 0x696a, 0x68ca, 0x682a, 0x678a, 0x7766, 0x76c6, 0x7626, 0x7586, 0x6566, 0x64c6,
    0x6426, 0x6406, 0x73e2, 0x7342, 0x72a2, 0x7202, 0x61e2, 0x60a2, 0x6142, 0x8082,
};

struct TrampolineData {
  [[maybe_unused]] HookHandle* root_handle;
  [[maybe_unused]] void* hook;
  [[maybe_unused]] void* backup;
  [[maybe_unused]] uint16_t post_handlers;
};

class Trampoline {
 public:
  static TrampolineType GetSuggestedTrampolineType(func_t address, void* target);

  static int GetFirstTrampolineSize(TrampolineType type);

  static void WriteFirstTrampoline(func_t address, void* target, TrampolineType type);

 private:
  static void Write32BitJumpInstruction(uint32_t op, func_t address, uint32_t v);
};

}  // namespace rv64hook
